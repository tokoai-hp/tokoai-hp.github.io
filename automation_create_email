<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TokoAI - 邮件自动化设置</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <style>
        .gradient-text {
            background: linear-gradient(45deg, #60A5FA, #34D399);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    </style>
</head>
<body class="bg-white font-sans min-h-screen flex flex-col">
    <header class="bg-white shadow-sm">
        <div class="container mx-auto px-4 py-4 flex justify-between items-center">
            <h1 class="text-3xl font-bold gradient-text">TokoAI</h1>
            <nav>
                <ul class="flex space-x-6">
                    <li><a href="#" class="text-gray-600 hover:text-blue-500 transition duration-300">如何自动化</a></li>
                    <li><a href="#" class="text-gray-600 hover:text-blue-500 transition duration-300">我们的产品</a></li>
                    <li><a href="#" class="bg-gradient-to-r from-blue-500 to-green-400 text-white px-4 py-2 rounded-full hover:from-blue-600 hover:to-green-500 transition duration-300 shadow-md hover:shadow-lg">登录</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8 flex-grow">
        <div class="max-w-3xl mx-auto">
            <div class="bg-white rounded-2xl shadow-lg overflow-hidden mb-8" id="tutorialCard">
                <div class="bg-gradient-to-r from-blue-500 to-green-400 p-6">
                    <h2 class="text-2xl font-bold text-white text-center">邮件自动化教程</h2>
                </div>
                <div class="p-6 space-y-6">
                    <div>
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">1. 设置邮件转发</h3>
                        <div class="flex items-start space-x-4 bg-gray-50 p-4 rounded-lg">
                            <input type="checkbox" id="step1Checkbox" class="mt-1 h-5 w-5 text-blue-500">
                            <div>
                                <label for="step1Checkbox" class="text-base text-gray-700 font-medium">
                                    将您想要自动化的邮件转发到 xxxxx@hotmail.com
                                </label>
                                <p class="text-sm text-gray-500 mt-2">打开邮箱设置 → 转发设置 → 填写转发邮箱</p>
                            </div>
                        </div>
                    </div>
                    
                    <div id="step2Section" class="hidden">
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">2. 保存密码</h3>
                        <div class="flex items-start space-x-4 bg-gray-50 p-4 rounded-lg">
                            <input type="checkbox" id="step2Checkbox" class="mt-1 h-5 w-5 text-blue-500">
                            <div>
                                <label for="step2Checkbox" class="text-base text-gray-700 font-medium">
                                    请保存好你的用户密码
                                </label>
                                <p class="text-sm text-gray-500 mt-2">您和您的客户可以使用邮箱和用户密码来一键收取邮件</p>
                                <div class="mt-3 bg-white p-3 rounded border border-gray-300">
                                    <p class="text-sm text-gray-600 mb-2">您的密码：</p>
                                    <div class="flex items-center">
                                        <code id="passwordDisplay" class="bg-gray-100 px-3 py-2 rounded flex-grow mr-2"></code>
                                        <button id="copyButton" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300">
                                            复制
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-2xl shadow-lg overflow-hidden hidden" id="formCard">
                <div class="bg-gradient-to-r from-blue-500 to-green-400 p-6">
                    <h2 class="text-2xl font-bold text-white text-center">邮件自动化收集</h2>
                </div>
                <div class="p-6">
                    <form id="emailForm" class="space-y-6">
                        <div>
                            <label for="name" class="block text-sm font-medium text-gray-700 mb-1">昵称</label>
                            <input type="text" id="name" name="name" required placeholder="请输入您的昵称" 
                                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-300">
                        </div>
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">接收验证码的邮箱</label>
                            <input type="email" id="email" name="email" required placeholder="请输入您的邮箱地址" 
                                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-300">
                        </div>
                        <div>
                            <label for="password" class="block text-sm font-medium text-gray-700 mb-1">用户密码</label>
                            <input type="password" id="password" name="password" required placeholder="请设置您的密码" 
                                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-300">
                        </div>
                        <div>
                            <label for="need" class="block text-sm font-medium text-gray-700 mb-1">其他需求</label>
                            <textarea id="need" name="need" placeholder="如有其他需求，请在此说明" rows="3"
                                      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-300"></textarea>
                        </div>
                        <button type="submit" id="submitButton" 
                                class="w-full bg-gradient-to-r from-blue-500 to-green-400 text-white font-medium py-3 px-4 rounded-md hover:from-blue-600 hover:to-green-500 transition duration-300 shadow-md hover:shadow-lg">
                            提交
                        </button>
                    </form>
                    <div id="errorMessage" class="mt-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 hidden" role="alert">
                        <p class="font-bold">错误</p>
                        <p id="errorText"></p>
                    </div>
                </div>
            </div>

            <div class="mt-6 text-center hidden" id="startSection">
                <a href="https://tokoai-hp.github.io/automation_use_email" id="startButton" class="inline-block bg-gradient-to-r from-blue-500 to-green-400 text-white font-medium py-3 px-8 rounded-md hover:from-blue-600 hover:to-green-500 transition duration-300 shadow-md hover:shadow-lg">
                    点击此处开始
                </a>
            </div>
        </div>
    </main>

    <footer class="bg-gray-50 border-t border-gray-200">
        <div class="container mx-auto px-4 py-6">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="flex items-center space-x-4 mb-4 md:mb-0">
                    <p class="text-gray-600">客服和商务合作请联系微信：</p>
                    <span class="font-bold text-green-500">TokoStephen</span>
                    <i class="fab fa-weixin text-2xl text-green-500"></i>
                </div>
                <div class="text-gray-500">&copy; 2024 TokoAI. All rights reserved.</div>
            </div>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const step1Checkbox = document.getElementById('step1Checkbox');
            const step2Section = document.getElementById('step2Section');
            const step2Checkbox = document.getElementById('step2Checkbox');
            const formCard = document.getElementById('formCard');
            const emailForm = document.getElementById('emailForm');
            const submitButton = document.getElementById('submitButton');
            const errorMessage = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            const passwordDisplay = document.getElementById('passwordDisplay');
            const copyButton = document.getElementById('copyButton');
            const startSection = document.getElementById('startSection');
            const startButton = document.getElementById('startButton');

            let fullPassword = '';

            step1Checkbox.addEventListener('change', function() {
                formCard.classList.toggle('hidden', !this.checked);
            });

            step2Checkbox.addEventListener('change', function() {
                startSection.classList.toggle('hidden', !this.checked);
            });

            emailForm.addEventListener('submit', function(e) {
                e.preventDefault();
                submitButton.textContent = '提交中...';
                submitButton.disabled = true;
                errorMessage.classList.add('hidden');

                const formData = {
                    name: document.getElementById('name').value,
                    Email: document.getElementById('email').value,
                    password: document.getElementById('password').value,
                    need: document.getElementById('need').value
                };

                fetch('https://x8ki-letl-twmt.n7.xano.io/api:YjC_TEO2/test', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('提交失败，请稍后重试');
                    }
                    return response.json();
                })
                .then(data => {
                    formCard.classList.add('hidden');
                    step2Section.classList.remove('hidden');
                    fullPassword = formData.password;
                    displayMaskedPassword();
                })
                .catch(error => {
                    errorText.textContent = error.message;
                    errorMessage.classList.remove('hidden');
                })
                .finally(() => {
                    submitButton.textContent = '提交';
                    submitButton.disabled = false;
                });
            });

            function displayMaskedPassword() {
                const maskedPassword = fullPassword.substring(0, 2) + '*'.repeat(fullPassword.length - 2);
                passwordDisplay.textContent = maskedPassword;
            }

            copyButton.addEventListener('click', function() {
                const tempTextArea = document.createElement('textarea');
                tempTextArea.value = fullPassword;
                document.body.appendChild(tempTextArea);
                
                tempTextArea.select();
                document.execCommand('copy');
                
                document.body.removeChild(tempTextArea);

                copyButton.textContent = '已复制';
                setTimeout(() => {
                    copyButton.textContent = '复制';
                }, 2000);
            });

            // 移除了startButton的点击事件监听器，因为现在使用href属性直接跳转
        });
    </script>
</body>
</html>
